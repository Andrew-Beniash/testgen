# Alembic Configuration for Test Generation Agent v2.0

[alembic]
# Path to migration scripts
script_location = alembic

# Template used to generate migration file names; The default value is %%(rev)s_%%(slug)s
# Uncomment the line below if you want the files to be prepended with date and time
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s

# sys.path path, will be prepended to sys.path if present.
# defaults to the current working directory.
prepend_sys_path = .

# timezone to use when rendering the date within the migration file
# as well as the filename.
# If specified, requires the python-dateutil library that can be
# installed by adding `alembic[tz]` to the pip requirements
# string value is passed to dateutil.tz.gettz()
# leave blank for localtime
# timezone =

# max length of characters to apply to the
# "slug" field
# truncate_slug_length = 40

# set to 'true' to run the environment during
# the 'revision' command, regardless of autogenerate
# revision_environment = false

# set to 'true' to allow .pyc and .pyo files without
# a source .py file to be detected as revisions in the
# versions/ directory
# sourceless = false

# version path separator; As mentioned above, this is the character used to split
# version_locations. The default within new alembic.ini files is "os", which uses
# os.pathsep. If this key is omitted entirely, it falls back to the legacy
# behavior of splitting on spaces and/or commas.
# Valid values for version_path_separator are:
#
# version_path_separator = :
# version_path_separator = ;
# version_path_separator = space
version_path_separator = os

# the output encoding used when revision files
# are written from script.py.mako
# output_encoding = utf-8

# Database URL configuration
# Primary database URL - loaded from environment variable
sqlalchemy.url = 

# URL for testing database
# test_sqlalchemy.url = 

# Connection pool settings for migration operations
[post_write_hooks]
# post_write_hooks defines scripts or Python functions that are run
# on newly generated revision scripts.  See the documentation for further
# detail and examples

# format using "black" - use the console_scripts runner, against the "black" entrypoint
# hooks = black
# black.type = console_scripts
# black.entrypoint = black
# black.options = -l 79 REVISION_SCRIPT_FILENAME

# format using "ruff" - use the console_scripts runner, against the "ruff" entrypoint  
# hooks = ruff
# ruff.type = console_scripts
# ruff.entrypoint = ruff
# ruff.options = --fix REVISION_SCRIPT_FILENAME

# Logging configuration
[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

# Migration environment configuration
[alembic:migration_env]
# Environment-specific settings
compare_type = true
compare_server_default = true
include_schemas = true
include_object = migrate_include_object

# PostgreSQL-specific settings
render_as_batch = false
sqlalchemy.pool_pre_ping = true
sqlalchemy.pool_recycle = 3600

# Quality assurance settings
compare_type = true
compare_server_default = true
include_schemas = true

# Development environment specific settings
[alembic:dev]
# Auto-upgrade on startup for development
auto_upgrade = true
# Enable detailed logging for development
sqlalchemy.echo = false
# Allow dangerous operations in development
allow_drop_tables = true
allow_drop_columns = true

# Testing environment specific settings
[alembic:test]
# Use separate test database
auto_upgrade = true
# Use in-memory or faster operations for testing
sqlalchemy.echo = false
allow_drop_tables = true
allow_drop_columns = true

# Production environment specific settings
[alembic:prod]
# Never auto-upgrade in production
auto_upgrade = false
# Minimal logging in production
sqlalchemy.echo = false
# Strict safety settings
allow_drop_tables = false
allow_drop_columns = false
require_confirmation = true
